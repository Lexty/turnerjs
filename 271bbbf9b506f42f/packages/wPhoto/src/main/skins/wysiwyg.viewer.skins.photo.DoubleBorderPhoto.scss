@charset "UTF-8";

@import '../../../../components/src/main/mixins/components-base';
@import 'mixins/photoZoom';

// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$bg: color_11;
$brd1: color_15;
$brd2: color_14;
$sz1: 3px;
$sz2: 1px;
$mrg1: 7px;
$mrg2: 5px;
$shd: 0 1px 3px rgba(0, 0, 0, .5);
$rd: 0;
$tdr: BASE_THEME_DIRECTORY;

@include define-mapped-param(contentPaddingLeft, mrg1);
@include define-mapped-param(contentPaddingRight, mrg1);
@include define-mapped-param(contentPaddingBottom, mrg1);
@include define-mapped-param(contentPaddingTop, mrg1);

@include exports("img:skin", "skins.core.ImageNewSkinZoomable");
@include zoomAndPanCursor($tdr);


:host {
  background-color: param-bg-color(bg, $bg);
  @include param-border-radius(rd, $rd);
  @include param-box-shadow(shd, $shd);
}

#inlineContent {
  @include abs-distance(0);
}

.wrap {
  @include param-border-radius(rd, $rd);
  box-sizing: border-box !important;
  display: block;
  overflow: hidden;
  position: absolute;
  top: param-margin-size(mrg1, $mrg1);
  bottom: param-margin-size(mrg1, $mrg1);
  left: param-margin-size(mrg1, $mrg1);
  right: param-margin-size(mrg1, $mrg1);
}

#img {
  @include param-border-radius(rd, $rd);
  box-sizing: border-box !important;
  display: block;
  position: absolute;
  overflow: hidden;
}

b {
  display: block;
  @include abs-distance(0);
  border-style: solid;
  @include param-border-radius(rd, $rd);
  pointer-events: none;
}

.one {
  border-color: param-border-color-alpha(brd1, $brd1);
  border-width: param-border-size(sz1, $sz1);
}

.two {
  border-color: param-border-color-alpha(brd2, $brd2);
  border-width: param-border-size(sz2, $sz2);
  margin: param-margin-size(mrg2, $mrg2);
}

.three {
  @include param-border-radius(rd, $rd);
  box-sizing: border-box !important;
  display: block;
  overflow: hidden;
  @include abs-distance(0);
}
