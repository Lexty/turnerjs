@charset "UTF-8";


// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
@import "TinyMenuCommon";

$bgs: color_18;
$txts: color_11;
$txt: color_11;
$bgDrop: $bg;


$border: 1px solid param-border-color-alpha(bordercolor, $bordercolor);
$textcolor: param-text-color-preserve-legacy-alpha(txt, $txt);
$padding: 17px;
$height: 48px;
$textAlignment: 'left';

:host {
  text-alignment: param-text-alignment(textAlignment, $textAlignment);
}

#menuButton {
  &.preserve-legacy-size {
    width: 50px;
    height: 50px;
  }

  > .icon {
    display: none;

    &.open {
      display: block;
    }

    @include when-root-has-all-classes(menuOpen) {
      &.open {
        display: none;
      }
      &.close {
        display: block;
      }
    }

    &.close {
      @include when-root-has-all-classes(menuOpen) {
        display: block;
      }
    }
  }
}

#menuContainer {
  position: absolute;
  font-size: 16px;
  overflow-y: auto;
  transform: translateX(120%);
  transition: 300ms transform step-end;

  &.menuOpen {
    transform: translateX(0);
    transition: transform 0s;
  }

  .top-menu {
    transition: transform 300ms ease-in;
    transform: translate3d(0, -105%, 0);
    border: $border;
    overflow-x: hidden;
    list-style: none;

    @include when-root-has-all-classes(menuOpen) {
      transition: transform 300ms ease-in;
      transform: translate3d(0, 0, 0);
    }

    .toggler {
      width: 50px;
      height: 48px;
      display: block;
      position: absolute;
      top: 0;
      background: param-bg-color(bgDrop, $bgDrop);
    }


    .submenu {
      clear: both;
      .item {
        background-color: param-bg-color(bgDrop, $bgDrop);
      }

      .link {
        @include when-root-has-all-classes(dir-left) {
          padding-left: 34px;
        }
      }
    }

    .link.current {
      background-color: param-bg-color(bgs, $bgs);
      color: param-text-color-preserve-legacy-alpha(txts, $txts);
    }

    @mixin opener {
      width: 50px;
      text-align: center;
      line-height: $height;
      content: "âˆ¨";
      @include rotate(0);
      position: absolute;
      color: $textcolor;
      font-size: 30px;
    }

    .has-children {
      > .link {
        @include when-root-has-all-classes(dir-left) {
          padding-right: 67px;
          padding-left: $padding;
        }

        @include when-root-has-all-classes(dir-center) {
          padding: 0 $padding;
        }

        @include when-root-has-all-classes(dir-right) {
          padding-left: 67px;
          padding-right: $padding;
        }
      }

      .toggler {
        @include when-root-has-all-classes(dir-left) {
          border-left: $border;
          right: 0;

          &:after {
            @include opener;
            color: $textcolor;
          }
        }

        @include when-root-has-all-classes(dir-right) {
          border-right: $border;
          left: 0;

          &:before {
            @include opener;
            left: 0;
          }

          &:after {
            content: "";
          }
        }

        @include when-root-has-all-classes(dir-center) {
          &:after {
            @include opener;
            right: 0;
          }
        }
      }
    }

    .item {
      @include opacity(0.95);
      height: $height;
      line-height: $height;
      background-color: param-bg-color(bgDrop, $bgDrop);
      border-bottom: $border;
      cursor: pointer;
      position: relative;
      color: $textcolor;

      &:last-child {
        border-bottom: 0;
      }

      &.open {
        height: auto;

        > .link {
          border-bottom: $border;
        }

        > .toggler {
          background: param-bg-color(bgs, $bgs);
        }

        > .submenu {
          .link {
            @include when-root-has-all-classes(dir-right) {
              padding-right: 34px;
            }

            @include when-root-has-all-classes(dir-center) {
              padding: 0;
            }
          }
        }
      }

      > .link {
        padding: 0 $padding;
        float: left;
        width: 100%;
        display: block;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        box-sizing: border-box;
        color: $textcolor;

        &.current {
          color: param-text-color-preserve-legacy-alpha(txts, $txts);
        }

        @include when-root-has-all-classes(dir-left) {
          text-align: left;
        }
        @include when-root-has-all-classes(dir-right) {
          text-align: right;
        }
        @include when-root-has-all-classes(dir-center) {
          text-align: center;
        }
      }
    }
  }
}
