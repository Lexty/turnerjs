@charset "UTF-8";

@import 'paginaredGridGalleryBase';


// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$bg: color_11;
$bg1: color_18;
$bg2: bg1;
$txt: color_15;
$link-color: color_15;
$fntt: font_6;
$fntds: font_8;
$shd: 0 1px 4px rgba(0, 0, 0, .6);
$trans: opacity .3s ease 0s;
$trans2: opacity 0s;

@include define-mapped-param(bg2, bg1, COLOR);

@include exports(heightDiff, 20);
@include exports(widthDiff, 20);
@include exports("img:skin", "skins.core.ImageSkin");

#itemsContainer {
  overflow: hidden;
  margin: 0 10px;
}

#rolloverHolder {
  box-sizing: border-box !important;
  @include param-font(fntds, $fntds);
  background-color: param-bg-color(bg, $bg);
  @include param-transition(trans2, $trans2);
  color: param-border-color(txt, $txt);
  @include opacity(0);
  padding: 10px !important;
  overflow: hidden;
  cursor: pointer;
}

[data-state~="rollover"] #rolloverHolder {
  @include param-transition(trans, $trans);
  @include opacity(1);
}

#title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  @include param-font(fntt, $fntt);
}

#description {
  white-space: pre-line;
  overflow: hidden;
  max-height: 60%;
}

#link {
  overflow: hidden;
  white-space: nowrap;
  text-decoration: underline;
  color: param-text-color(linkColor, $link-color);
  position: absolute;
  bottom: 10px;
  left: 10px;
  right: 10px;
}

.btn {
  background-color: param-bg-color(bg1, $bg1);
  box-shadow: $shd;
  line-height: 40px;
  height: 40px;
  width: 40px;
  margin-top: -30px;
  position: absolute;
  top: 50%;
  cursor: pointer;
  text-align: center;
  display: block;

  span {
    border: 6px solid transparent;
    width: 0;
    height: 0;
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
  }

  &:after {
    position: absolute;
    content: "";
    bottom: -10px;
    border: transparent solid 10px;
    border-top: 0;
    width: 0;
    height: 0;
  }
}

#buttonPrev {
  left: 0;

  span {
    border-right: 5px solid param-border-color(txt, $txt);
    margin: -4px 0 0 -8px;
  }

  &:after {
    left: -10px;
    border-right-color: mutate-color-param(bg2, brightness, .5, bg1);
  }
}

#buttonNext {
  right: 0;

  span {
    border-left: 5px solid param-border-color(txt, $txt);
    margin: -5px 0 0 -2px;
  }

  &:after {
    right: -10px;
    border-left-color: mutate-color-param(bg2, brightness, .5, bg1);
  }
}

.hlp {
  position: absolute;
  color: param-border-color(txt, $txt);

  span {
    display: block;
  }
}

#autoplay {
  right: 35px;
  bottom: 0;
}

#counter {
  right: 10px;
  bottom: -2px;
  font-size: 13px;
}

[data-state~="noLink"]  #link {
  display: none;
}

[data-state~="autoplayOff"] #autoplay > span {
  border: 6px solid transparent;
  border-left-color: param-border-color(txt, $txt);
}

[data-state~="autoplayOn"]  #autoplay > span {
  border-left: 3px solid param-border-color(txt, $txt);
  border-right: 3px solid param-border-color(txt, $txt);
  margin-right: 5px;
  height: 12px;
  width: 1px;
}
