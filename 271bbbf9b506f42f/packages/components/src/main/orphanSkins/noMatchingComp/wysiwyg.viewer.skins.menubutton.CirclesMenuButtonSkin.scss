@charset "UTF-8";

@import '../../mixins/components-base';



// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_2;
$clr1: color_1;
$clr2: color_2;
$clr3: color_3;
$clr4: color_4;
$clr5: color_9;
$clr6: color_15;
$txt: color_15;
$txtac: color_7;
$trans: color .4s ease 0s, background-color .4s ease 0s;

@include exports("minH", 140);
@include exports("maxH", 140);

:host {
  display: inline-block;
  cursor: pointer;
  @include param-font(fnt, $fnt);
  font-size: 150%;
  text-transform: uppercase;
  @include param-transition(trans, $trans);
  margin: 0 0 0 -3%  !important;
  color: param-text-color(txt, $txt);
}

.bg {
  border-radius: 50%;
  cursor: pointer;
  display: inline-block;
  position: absolute;
  min-height: 140px !important;
  min-width: 140px !important;
  ;
}

#label {
  
}

.bg:hover {
  @include opacity(1);
}

:host:nth-child(n+1) .bg {
  background: param-bg-color(clr5, $clr5);
}

:host:nth-child(n+2) .bg {
  background: param-bg-color(clr2, $clr2);
}

:host:nth-child(n+3) .bg {
  background: param-bg-color(clr3, $clr3);
}

:host:nth-child(n+4) .bg {
  background: param-bg-color(clr4, $clr4);
}

:host:nth-child(n+5) .bg {
  background: param-bg-color(clr1, $clr1);
}

:host:nth-child(n+6) .bg {
  background: param-bg-color(clr6, $clr6);
}

.bg:active {
  color: param-text-color(txtac, $txtac);
  @include opacity(0.5);
}

