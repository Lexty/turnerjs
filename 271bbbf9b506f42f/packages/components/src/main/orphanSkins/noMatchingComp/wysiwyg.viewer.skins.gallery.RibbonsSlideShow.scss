@charset "UTF-8";

@import '../../mixins/components-base';

// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$tdr: BASE_THEME_DIRECTORY;
$bgc: color_1;
$bgc1: color_2;
$clr: bgc1;
$rd: 0;
$shd: 0 1px 2px rgba(0, 0, 0, .6);

@include define-mapped-param(clr, bgc1, COLOR);

@include exports("widthDiff", 20);
@include exports("imageItem:skin", "wysiwyg.viewer.skins.displayers.FrameDisplayer");

.xxx {
  @include abs-distance(0);
  background: param-url(tdr, $tdr, "net.png") center center repeat;
}

:host {
  background-color: param-bg-color(bgc, $bgc);
  @include param-border-radius(rd, $rd);
  @include param-box-shadow(shd, $shd);

  &:hover {
    > #autoplay {
      left: 0;
    }

    > #counter {
      left: 66px;
    }
  }
}

.btn {
  background-color: param-bg-color(bgc1, $bgc1);
  @include param-box-shadow(shd, $shd);
  color: #fff;
  position: absolute;
  top: 50%;
  margin-top: -20px;
  width: 40px;
  height: 40px;
  line-height: 40px;
  text-align: center;

  div {
    position: absolute;
    bottom: -10px;
    height: 0;
    width: 0;
    border: 5px solid transparent;
  }
}

#buttonPrev,
#buttonNext {
  div {
    border-top: 5px solid mutate-color-param(clr, saturation, .4, bgc1);
    //mutate-color-param(clr, brightness, .6, bgc1);
    //TODO: need to implement functionality for multiple mutators on one css property
  }
}

#buttonPrev {
  left: 0;

  div {
    border-right: 5px solid mutate-color-param(clr, saturation, .4, bgc1);
    //mutate-color-param(clr, brightness, .6, bgc1);
    //TODO: need to implement functionality for multiple mutators on one css property
    left: 0;
  }
}

#buttonNext {
  right: 0;

  div {
    border-left: 5px solid mutate-color-param(clr, saturation, .4, bgc1);
    //mutate-color-param(clr, brightness, .6, bgc1);
    //TODO: need to implement functionality for multiple mutators on one css property
    right: 0;
  }
}

.hlp {
  padding: 5px;
  position: absolute;
  left: -100px;
  bottom: 10px;
  background-color: param-bg-color(bgc, $bgc);
  transition: left .5s;
}

#itemsContainer {
  @include param-border-radius(rd, $rd);
  overflow: hidden;
  @include abs-distance(10px);
}

[data-state~="autoplayOn"],
[data-state~="autoplayOff"] {
  #autoplay {
    display: block;
  }
}

