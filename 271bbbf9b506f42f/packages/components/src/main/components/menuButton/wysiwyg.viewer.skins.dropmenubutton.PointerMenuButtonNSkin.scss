@charset "UTF-8";

@import '../../mixins/components-base';
@import 'menuButtonBase';

// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_1;
$txt: color_15;
$txth: color_15;
$txts: color_15;
$pad: 5px;
$brd: color_15;
$bgh: color_17;
$bgs: color_18;
$rd: 10px;
$clrh: bgh;
$clrs: bgs;
$trans: background-color .4s ease 0s;
$trans2: color .4s ease 0s;
@include define-mapped-param(clrs, bgs, COLOR_ALPHA);
@include define-mapped-param(clrh, bgh, COLOR_ALPHA);
@include exports("addToMinH", 14);

:host {
  display: inline-block;
  cursor: pointer;
}

#labelPad {
  height: 13px;
  text-align: center;
  width: 100%;
  border-top: solid 1px param-color-alpha(brd, $brd);
}

.arr {
  width: 0;
  height: 0;
  margin: 0 auto;
}

.outer {
  border: solid 11px transparent;
  border-top-color: param-color-alpha(brd, $brd);
  margin-top: -1px;
  visibility: hidden;
  border-bottom-width: 3px;
}

.inner {
  border: solid 10px transparent;
  border-top-color: param-color-alpha(clrh, $clrh);
  margin-top: -14px;
  visibility: hidden;
  border-bottom-width: 3px;
}

#bg {
  background-color: transparent;
  @include param-transition(trans, $trans);
}

#label {
  display: inline-block;
  padding: 0 calc(#{param-padding-size(pad, $pad)} + 10px);
  color: param-text-color(txt, $txt);
  @include param-font(fnt, $fnt);
  @include param-transition(trans2, $trans2);
}

[data-state~="drop"] {
  width: 100%;
  display: block;

  #label {
    display: inline-block;
    padding: 0 .5em;
  }

  #labelPad {
    display: none;
  }
}

[data-listposition="dropLonely"],
[data-listposition="top"],
[data-listposition="bottom"] {
  #bg {
    @include param-border-radius(rd, $rd);
  }
}

[data-listposition="top"] #bg {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="bottom"] #bg {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-state~="over"] {
  #bg {
    background-color: param-bg-color(bgh, $bgh);
    @include param-transition(trans, $trans);
  }

  #label {
    color: param-text-color(txth, $txth);
    @include param-transition(trans2, $trans2);
  }
}

[data-state~="selected"] {
  #bg {
    background-color: param-bg-color(bgs, $bgs);
    @include param-transition(trans, $trans);
  }

  #label {
    color: param-text-color(txts, $txts);
    @include param-transition(trans2, $trans2);
  }

  .outer,
  .inner {
    visibility: inherit;
  }

  .inner {
    border-top-color: param-color-alpha(clrs, $clrs);
  }
}


