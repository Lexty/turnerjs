@charset "UTF-8";

@import '../../mixins/components-base';
@import 'menuButtonBase';



// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_1;
$txt: color_15;
$txth: color_15;
$txts: color_15;
$bg: color_11;
$bgh: color_17;
$bgs: color_18;
$rd: 3px;
$pad: 5px;
$brw: 10px;
$shd: 0 1px 4px rgba(0, 0, 0, .6);
$rdA: rd;
$rdB: rd;
$brwA: brw;
$trans1: color .4s ease 0s ,background .4s ease 0s;
$trans3: color .4s ease 0s ,border-color .4s ease 0s;

@include exports("minH", 40);
@include exports("maxH", 40);

:host {
  display: inline-block;
  cursor: pointer;
  background: param-border-color-alpha(bg, $bg);
  @include param-font(fnt, $fnt);
  color: param-text-color(txt, $txt);
  @include param-transition(trans1, $trans1);
  margin: 0 param-border-size(brw, $brw) 0 param-margin-size(pad, $pad) !important;
  @include param-box-shadow(shd, $shd);
}

.head {
  position: absolute;
  top: 0;
  bottom: 0;
  right: calc(-1 * #{param-border-size(brw, $brw)});
  width: param-border-size(brw, $brw);
}

.tail {
  position: absolute;
  top: 0;
  bottom: 0;
  left: calc(-1 * #{param-border-size(brw, $brw)});
  width: mutate-size-param(brwA, multiply, 2, brw);
}

.arrowHead {
  border: 20px solid transparent;
  border-left-color: param-border-color-alpha(bg, $bg);
  border-left-width: param-border-size(brw, $brw);
  border-right-width: param-border-size(brw, $brw);
  @include param-transition(trans3, $trans3);
}

.arrowTail {
  border: 20px solid param-border-color-alpha(bg, $bg);
  border-left-color: transparent;
  border-left-width: param-border-size(brw, $brw);
  border-right-width: param-border-size(brw, $brw);
  @include param-transition(trans3, $trans3);
}

[data-listposition="left"] .arrowTail {
  display: none;
}

[data-listposition="left"] {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  margin-left: -5px;
}

[data-listposition="right"] .arrowHead {
  display: none;
}

[data-listposition="right"] {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

#label {
  display: inline-block;
  height: 40px !important;
  line-height: 40px !important;
  position: relative;
  padding: 0 15px;
}

[data-state="over"] {
  background: param-border-color-alpha(bgh, $bgh);
  color: param-text-color(txth, $txth);
}

[data-state="over"] .arrowHead {
  border-left-color: param-border-color-alpha(bgh, $bgh);
}

[data-state="over"] .arrowTail {
  border-color: param-border-color-alpha(bgh, $bgh);
  border-left-color: transparent;
}

[data-state="selected"] {
  background: param-border-color-alpha(bgs, $bgs);
  color: param-text-color(txts, $txts);
}

[data-state="selected"] .arrowHead {
  border-left-color: param-border-color-alpha(bgs, $bgs);
}

[data-state="selected"] .arrowTail {
  border-color: param-border-color-alpha(bgs, $bgs);
  border-left-color: transparent;
}

