@charset "UTF-8";

@import '../../mixins/components-base';
@import 'menuButtonBase';



// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_1;
$txt: color_15;
$txth: color_15;
$txts: color_15;
$sep: color_15;
$bg: color_11;
$bgh: color_17;
$bgs: color_18;
$tdr: BASE_THEME_DIRECTORY;
$rd: 10px;
$rdRight: rd;
$rdLeft: rd;
$rdDrop: 10px;
$rdTop: rdDrop;
$rdBottom: rdDrop;
$trans: background-color .4s ease 0s;
$trans1: opacity .4s ease 0s;
$trans2: color .4s ease 0s;



:host {
  display: inline-block;
  cursor: pointer;
  border-left: 1px solid param-color-alpha(sep, $sep);
  background: param-bg-color(bg, $bg);
  @include param-transition(trans, $trans);
}

.extra {
  background: transparent param-url(tdr, $tdr, "shiny2button_bg.png") center top repeat-x;
  @include abs-distance(0);
}

.wrapper {
  background: transparent param-url(tdr, $tdr, "shiny2button_bg.png") center bottom repeat-x;
  width: 100%;
  height: 100%;
}

#label {
  display: inline-block;
  padding: 0 10px;
  @include param-font(fnt, $fnt);
  color: param-text-color(txt, $txt);
  @include param-transition(trans2, $trans2);
}

[data-listposition="lonely"] {
  @include param-border-radius(rd, $rd);
  border: 0;
}

[data-listposition="lonely"] .wrapper {
  @include param-border-radius(rd, $rd);
  border: 0;
}

[data-listposition="lonely"] .extra {
  @include param-border-radius(rd, $rd);
  border: 0;
}

:host:first-child {
  border: 0;
}

[data-listposition="left"] {
  @include param-border-radius(rd, $rd);
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border: 0;
}

[data-listposition="left"] .wrapper {
  @include param-border-radius(rd, $rd);
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border: 0;
}

[data-listposition="left"] .extra {
  @include param-border-radius(rd, $rd);
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border: 0;
}

[data-listposition="right"] {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

[data-listposition="right"] .wrapper {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

[data-listposition="right"] .extra {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

[data-state~="drop"] {
  width: 100%;
  display: block;
  border: 0;
  background-color: transparent;
  @include param-transition(trans, $trans);
}

[data-state~="drop"] .extra {
  @include opacity(0);
  @include param-transition(trans1, $trans1);
}

[data-state~="drop"] .wrapper {
  @include opacity(0);
}

[data-listposition="dropLonely"] {
  @include param-border-radius(rdDrop, $rdDrop);
}

[data-listposition="dropLonely"] .extra {
  @include param-border-radius(rdDrop, $rdDrop);
}

[data-listposition="dropLonely"] .wrapper {
  @include param-border-radius(rdDrop, $rdDrop);
}

[data-listposition="top"] {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="top"] .extra {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="top"] .wrapper {
  @include param-border-radius(rd, $rd);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="bottom"] {
  @include param-border-radius(rd, $rd);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-listposition="bottom"] .extra {
  @include param-border-radius(rd, $rd);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-listposition="bottom"] .wrapper {
  @include param-border-radius(rd, $rd);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-state~="drop"][data-state~="over"] .extra {
  @include opacity(1);
  @include param-transition(trans1, $trans1);
}

[data-state~="drop"][data-state~="selected"] .extra {
  @include opacity(1);
  @include param-transition(trans1, $trans1);
}

[data-state~="drop"][data-state~="over"] .wrapper {
  @include opacity(1);
}

[data-state~="drop"][data-state~="selected"] .wrapper {
  @include opacity(1);
}

[data-state~="over"] {
  @include param-transition(trans, $trans);
  background: param-bg-color(bgh, $bgh);
}

[data-state~="over"] #label {
  @include param-transition(trans2, $trans2);
  color: param-text-color(txth, $txth);
}

[data-state~="selected"] {
  @include param-transition(trans, $trans);
  background: param-bg-color(bgs, $bgs);
}

[data-state~="selected"] #label {
  @include param-transition(trans2, $trans2);
  color: param-text-color(txts, $txts);
}

