@charset "UTF-8";

@import '../../mixins/components-base';
@import 'menuButtonBase';

// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_1;
$txt: color_15;
$txth: color_15;
$txts: color_15;
$sep: color_15;
$bg: color_11;
$bgh: color_17;
$bgs: color_18;
$rd: 10px;
$rd-drop: 10px;
$pad: 5px;
$tdr: BASE_THEME_DIRECTORY;
$trans: background-color .4s ease 0s;
$trans1: opacity .4s ease 0s;
$trans2: color .4s ease 0s;
$trans3: background-image .4s ease 0s;

@include define-mapped-param(childrenSpacing, pad);

:host {
  display: inline-block;
  cursor: pointer;
  border-left: 1px solid param-color-alpha(sep, $sep);
  background: param-bg-color(bg, $bg);
  @include param-transition(trans, $trans);
  padding: 0 param-padding-size(pad, $pad);
  box-sizing: border-box;

  &:first-child {
    border: 0;
  }
}

.extra,
.wrapper {
  background: transparent param-url(tdr, $tdr, "indented_bg_inverted.png") repeat-x;
  @include param-transition(trans3, $trans3);
  @include abs-distance(0);
}

.extra {
  background-position: center top;
}

.wrapper {
  background-position: center bottom;
}

#label {
  display: inline-block;
  padding: 0 10px;
  @include param-font(fnt, $fnt);
  color: param-text-color(txt, $txt);
  @include param-transition(trans2, $trans2);
}

#bg {
  @include param-border-radius(rd, $rd);
}

[data-listposition="lonely"],
[data-listposition="left"],
[data-listposition="right"] {
  @include param-border-radius(rd, $rd);

  .wrapper,
  .extra {
    @include param-border-radius(rd, $rd);
  }
}

[data-listposition="left"],
[data-listposition="left"] .wrapper,
[data-listposition="left"] .extra {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

[data-listposition="right"],
[data-listposition="right"] .wrapper,
[data-listposition="right"] .extra {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

[data-state~="drop"] {
  display: block;
  border: 0;
  background-color: transparent;
  padding: 0;
  @include param-transition(trans, $trans);

  #bg {
    @include param-border-radius(rdDrop, $rd-drop);
  }

  .wrapper,
  .extra {
    @include opacity(0);
  }

  .extra {
    @include param-transition(trans1, $trans1);
    width: auto;
  }

  #label {
    padding: 0 .5em;
  }
}

[data-listposition="dropLonely"],
[data-listposition="top"],
[data-listposition="bottom"] {
  @include param-border-radius(rdDrop, $rd-drop);

  .extra,
  .wrapper {
    @include param-border-radius(rdDrop, $rd-drop);
  }
}

[data-listposition="top"],
[data-listposition="top"] .extra,
[data-listposition="top"] .wrapper {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="bottom"],
[data-listposition="bottom"] .extra,
[data-listposition="bottom"] .wrapper {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-state~="drop"] {
  &[data-state~="over"] {
    .extra,
    .wrapper {
      @include opacity(1);
      @include param-transition(trans1, $trans1);
    }
  }

  &[data-state~="selected"] {
    .extra,
    .wrapper {
      @include opacity(1);
      @include param-transition(trans1, $trans1);
    }
  }
}

[data-state~="over"] {
  @include param-transition(trans, $trans);
  background: param-bg-color(bgh, $bgh);

  .extra,
  .wrapper {
    @include param-transition(trans3, $trans3);
    background: transparent param-url(tdr, $tdr, "indented_bg_inverted.png") repeat-x;
  }

  .extra {
    background-position: center top;
  }

  .wrapper {
    background-position: center bottom;
  }

  #label {
    @include param-transition(trans2, $trans2);
    color: param-text-color(txth, $txth);
  }
}

[data-state~="selected"] {
  @include param-transition(trans, $trans);
  background: param-bg-color(bgs, $bgs);

  .extra,
  .wrapper {
    @include param-transition(trans3, $trans3);
    background: transparent param-url(tdr, $tdr, "indented_bg.png") repeat-x;
  }

  .extra {
    background-position: center top;
  }

  .wrapper {
    background-position: center bottom;
  }

  #label {
    @include param-transition(trans2, $trans2);
    color: param-text-color(txts, $txts);
  }
}