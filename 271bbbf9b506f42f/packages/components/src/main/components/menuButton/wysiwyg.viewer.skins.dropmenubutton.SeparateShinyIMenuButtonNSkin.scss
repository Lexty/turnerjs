@charset "UTF-8";

@import '../../mixins/components-base';
@import 'menuButtonBase';



// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$fnt: font_1;
$txt: color_15;
$txth: color_15;
$txts: color_15;
$pad: 5px;
$bg: color_11;
$bgh: color_17;
$bgs: color_18;
$tdr: BASE_THEME_DIRECTORY;
$no_rd: 0;
$rd: 10px;
$rdDrop: 10px;
$rdTop: rdDrop;
$rdBottom: rdDrop;
$shd: 0 1px 4px rgba(0, 0, 0, .6);
$noshd: none;
$trans: background-color .4s ease 0s;
$trans1: all .4s ease 0s;
$trans2: color .4s ease 0s;



:host {
  display: inline-block;
}

.gapper {
  padding: 0 param-padding-size(pad, $pad);
}

.shade {
  cursor: pointer;
  background: param-bg-color(bg, $bg) param-url(tdr, $tdr, "shiny1button_bg.png") center center repeat-x;
  @include param-border-radius(rd, $rd);
  @include param-box-shadow(shd, $shd);
  @include param-transition(trans, $trans);
  position: absolute;
  top: 0;
  bottom: 0;
  left: param-padding-size(pad, $pad);
  right: param-padding-size(pad, $pad);
}

#bg {
  position: relative;
  cursor: pointer;
}

#label {
  display: inline-block;
  @include param-font(fnt, $fnt);
  color: param-text-color(txt, $txt);
  @include param-transition(trans2, $trans2);
  padding: 0 10px;
}

[data-listposition="left"] .gapper {
  padding-left: 0;
}

[data-listposition="left"] .shade {
  left: 0;
}

[data-listposition="right"]  .gapper {
  padding-right: 0;
}

[data-listposition="right"]  .shade {
  right: 0;
  left: param-padding-size(pad, $pad);
}

[data-listposition="lonely"] .gapper {
  padding: 0;
}

[data-listposition="lonely"]  .shade {
  right: 0;
  left: 0;
}

[data-state~="drop"] {
  width: 100%;
  display: block;
}

[data-state~="drop"] .gapper {
  padding: 0;
}

[data-state~="drop"] .shade {
  @include opacity(0);
  @include param-box-shadow(noshd, $noshd);
  @include param-border-radius(no_rd, $no_rd);
  background-color: transparent;
  left: 0;
  right: 0;
  @include param-transition(trans1, $trans1);
}

[data-state~="drop"] #label {
  display: inline-block;
  padding: 0 .5em;
}

[data-listposition="dropLonely"] .shade {
  @include param-border-radius(rdDrop, $rdDrop);
}

[data-listposition="top"] .shade {
  @include param-border-radius(rdDrop, $rdDrop);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

[data-listposition="bottom"] .shade {
  @include param-border-radius(rdDrop, $rdDrop);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[data-state~="drop"][data-state~="selected"] .shade {
  background-color: param-bg-color(bgs, $bgs);
  @include opacity(1);
  @include param-transition(trans1, $trans1);
}

[data-state~="drop"][data-state~="over"] .shade {
  background-color: param-bg-color(bgh, $bgh);
  @include opacity(1);
  @include param-transition(trans1, $trans1);
}

[data-state~="over"] .shade {
  background-color: param-bg-color(bgh, $bgh);
  @include param-transition(trans, $trans);
}

[data-state~="over"] #label {
  display: inline-block;
  color: param-text-color(txth, $txth);
  @include param-transition(trans2, $trans2);
}

[data-state~="selected"] .shade {
  background-color: param-bg-color(bgs, $bgs);
  @include param-transition(trans, $trans);
}

[data-state~="selected"] #label {
  display: inline-block;
  color: param-text-color(txts, $txts);
  @include param-transition(trans2, $trans2);
}

