@charset "UTF-8";
@import "../../mixins/components-base";
@import 'VerticalAnchorsMenuBase';

// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************

$symbolColor: color_15;
$symbolColorSelected: color_2;

@include exports(hoverElementClass, 'symbol');
@include exports(hasConnectingLines, 'true');
@include define-mapped-param(symbolAndTextColor, symbolColor);
@include define-mapped-param(selectedColor, symbolColorSelected);

#menuContainer {

  $bulletSize: 26px;
  $innerBulletSize: 10px;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;

  .line {
    display: none;
    $lineWidth: 1px;

    width: $lineWidth;
    height: 100%;
    background-color: param-bg-color(symbolColor, $symbolColor);
    top: $innerBulletSize;
    position: relative;
    opacity: .2;
  }

  .item {

    height: $bulletSize;
    width: $bulletSize;
    min-height: $innerBulletSize; /* Safari Issue */
    position: relative;

    .link {
      position: relative;
      height: $bulletSize;
      display: inline-block;

      .text-wrapper {
        display: none;
      }

      .symbol {
        height: $bulletSize;
        width: $bulletSize;
      }

      .symbol circle:nth-child(1) {
        stroke: param-bg-color(symbolColor, $symbolColor);
        stroke-width: 2;
        fill: transparent;
        opacity: 0;
        transition: opacity .25s ease;
      }

      .symbol circle:nth-child(2) {
        stroke: param-bg-color(symbolColorSelected, $symbolColorSelected);
        stroke-width: 2;
        fill: transparent;
      }

      .symbol circle:nth-child(3) {
        fill: param-bg-color(symbolColor, $symbolColor);
        transition: all .25s ease;
      }
    }

    &.hover {
      .link {
        cursor: pointer;
      }

      .symbol circle:nth-child(3) {
        opacity: 0.7;
      }
    }

    &.active {
      .link {
        cursor: pointer;

        .symbol circle:nth-child(1) {
          opacity: .75;
        }

        .symbol circle:nth-child(3) {
          fill: param-bg-color(symbolColorSelected, $symbolColorSelected);
        }
      }
    }
  }

  .item.light, .active.item.light {
    .link {
      .symbol circle:nth-child(1) {
        stroke: #fff;
      }

      .symbol circle:nth-child(2) {
        stroke: #fff;
      }

      .symbol circle:nth-child(3) {
        fill: #fff;
      }
    }
  }

  .item.dark, .active.item.dark {
    .link {
      .symbol circle:nth-child(1) {
        stroke: #000;
      }

      .symbol circle:nth-child(2) {
        stroke: #000;
      }

      .symbol circle:nth-child(3) {
        fill: #000;
      }
    }
  }
}
