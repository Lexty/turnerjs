@charset "UTF-8";

@import '../../../../components/src/main/mixins/components-base';
@import './button-common';


// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions. 
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$_borderRadius: 4px;
$shadowColor: 0,0,0,.2;
$shadowInsetColor: 0,0,0,.7;
$shadowInsetColorOver: 68,175,233,.7;
$borderColor: #5b8fa7;
$borderColorOver: #237aa7;
$bgColor: #2aa7ea;
$bgColorOver: #179ce1;
$labelColor: #ffffff;
$borderGrayColor: #c4c4c4;
$borderGrayColorOver: #89a4af;
$bgGrayColor: #f9fafc;
$bgGrayColorOver: #f2f3f5;
$labelGrayColor: #24a0c4;
$borderDisabledColor: #d5d5d5;
$bgDisabledColor: #f9fafc;
$labelDisabledColor: #c4c4c4;



:host {
  padding: 0 8px;
  border: 1px solid param-border-color(borderColor, $borderColor);
  @include param-border-radius(_borderRadius, $_borderRadius);
  background-color: param-bg-color(bgColor, $bgColor);
  position: relative;
  text-align: center;
  cursor: pointer;
}

[data-state~="over"] {
  border: 1px solid param-border-color(borderColorOver, $borderColorOver);
  background: param-bg-color(bgColorOver, $bgColorOver) none;
  box-shadow: 0 2px 3px 0 param-box-shadow-color(shadowColor, $shadowColor), 0 1px 2px 0 param-box-shadow-color(shadowInsetColorOver, $shadowInsetColorOver) inset;
}

[data-state~="pressed"] {
  background: param-bg-color(bgColor, $bgColor) none;
  border-color: transparent;
  box-shadow: 0 1px 3px 0 param-box-shadow-color(shadowInsetColor, $shadowInsetColor) inset;
}

#caption {
  color: param-text-color(labelColor, $labelColor);
  height: 1.8em;
  line-height: 1.8em;
}

[data-state~="grayed"] {
  border-color: param-border-color(borderGrayColor, $borderGrayColor);
  background-color: param-bg-color(bgGrayColor, $bgGrayColor);
}

[data-state~="grayed"][data-state~="over"] {
  border-color: param-border-color(borderGrayColorOver, $borderGrayColorOver);
  background-color: param-bg-color(bgGrayColorOver, $bgGrayColorOver);
  box-shadow: 0 2px 3px 0 param-box-shadow-color(shadowColor, $shadowColor), 0 1px 2px 0 #ffffff inset;
}

[data-state~="grayed"][data-state~="pressed"] {
  border-color: transparent;
  background-color: param-bg-color(bgGrayColor, $bgGrayColor);
}

[data-state~="grayed"] #caption {
  color: param-text-color(labelGrayColor, $labelGrayColor);
}

[disabled] {
  border-color: param-border-color(borderDisabledColor, $borderDisabledColor);
  background-color: param-bg-color(bgDisabledColor, $bgDisabledColor);
}

[disabled] #caption {
  color: param-text-color(labelDisabledColor, $labelDisabledColor);
}

