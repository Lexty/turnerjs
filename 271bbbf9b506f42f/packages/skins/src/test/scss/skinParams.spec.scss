@charset "UTF-8";

@import 'bootcamp';
@import '../../main/mixins/skins-base';

@include runner-start;

@include describe('function param-size') {
  @include it('should return param type SIZE') {
    @include should(
            expect(param-size('test', 10)),
            to(equal('/*<param type="SIZE" name="test" value="10">*/10/*</param>*/'))
    );
  }
}

@include describe('function param-color') {
  @include it('should return param type COLOR') {
    @include should(
            expect(param-color('test', 0)),
            to(equal('/*<param type="COLOR" name="test" value="0">*/0/*</param>*/'))
    );
  }
}

@include describe('function param-color-alpha') {
  @include it('should return param type COLOR_ALPHA') {
    @include should(
            expect(param-color-alpha('test', 0)),
            to(equal('/*<param type="COLOR_ALPHA" name="test" value="0">*/0/*</param>*/'))
    );
  }
}

@include describe('function param-url') {
  @include it('should return param type URL, with url protocol inheriting from parent') {
    @include should(
            expect(param-url('test', 'BASE_THEME_DIRECTORY', 'suffix')),
            to(equal('/*<param type="URL" name="test" value="BASE_THEME_DIRECTORY|suffix">*/url(//static.parastorage.com/services/skins/' + html-client-version() + '/images/wysiwyg/core/themes/base/suffix)/*</param>*/'))
    );
  }
}

@include describe('function param-cssstring') {
  @include it('should return param type CSSString') {
    @include should(
            expect(param-cssstring('test', 'padding1')),
            to(equal('/*<param type="CSSString" name="test" value="padding1">*/0 0 0 0/*</param>*/'))
    );
  }
}

@include describe('function param-number') {
  @include it('should return param type number') {
    @include should(
            expect(param-number('test', '10')),
            to(equal('/*<param type="number" name="test" value="10">*/10/*</param>*/'))
    );
  }
}

@include runner-end();