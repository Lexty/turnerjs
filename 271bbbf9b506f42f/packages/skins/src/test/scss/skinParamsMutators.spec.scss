@charset "UTF-8";

@import 'bootcamp';
@import '../../main/mixins/skins-base';

@include runner-start;

@include describe('function mutate-size-param') {
  @include it('should return mutator type SIZE') {
    @include should(
            expect(mutate-size-param('test-mutator', 'test-fn', 0, 'test-mutated-size')),
            to(equal('/*<mutator name="test-mutator" type="SIZE" func="test-fn" amount="0" param="test-mutated-size"/>*/0/*</mutator>*/'))
    );
  }
}

@include describe('function mutate-color-param') {
  @include it('should return mutator type COLOR and property name param') {
    @include should(
            expect(mutate-color-param('test-mutator', 'test-fn', 0, 'test-mutated-color')),
            to(equal('/*<mutator name="test-mutator" type="COLOR" func="test-fn" amount="0" param="test-mutated-color"/>*/#fff/*</mutator>*/'))
    );
  }
}

@include describe('function mutate-color-const') {
  @include it('should return mutator type COLOR and property name const') {
    @include should(
            expect(mutate-color-const('test-mutator', 'test-fn', 0, 'test-mutated-color')),
            to(equal('/*<mutator name="test-mutator" type="COLOR" func="test-fn" amount="0" const="test-mutated-color"/>*/#fff/*</mutator>*/'))
    );
  }
}

@include describe('function mutate-color-alpha-param') {
  @include it('should return mutator type COLOR_ALPHA and property name param') {
    @include should(
            expect(mutate-color-alpha-param('test-mutator', 'test-fn', 0, 'test-mutated-color-alpha')),
            to(equal('/*<mutator name="test-mutator" type="COLOR_ALPHA" func="test-fn" amount="0" param="test-mutated-color-alpha"/>*/transparent/*</mutator>*/'))
    );
  }
}

@include describe('function mutate-color-alpha-const') {
  @include it('should return mutator type COLOR_ALPHA and property name const') {
    @include should(
            expect(mutate-color-alpha-const('test-mutator', 'test-fn', 0, 'test-mutated-color-alpha')),
            to(equal('/*<mutator name="test-mutator" type="COLOR_ALPHA" func="test-fn" amount="0" const="test-mutated-color-alpha"/>*/transparent/*</mutator>*/'))
    );
  }
}

@include runner-end;