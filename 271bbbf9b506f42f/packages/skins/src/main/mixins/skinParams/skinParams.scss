@charset "UTF-8";

// Created by Eitan Rousso, 07/2014
@import 'skinParamsThemeData';
@import 'skinParamsUtils';

// Skin Params API
// NOTE: PLEASE MODIFY FILE WITH EXTRA CARE, MULTILINE COMMENTS ARE ON PURPOSE - do not fix the scss-lint warnings
// contains definitions and comments hints for processing generated css files into json format, as needed for skinRenderer.js

@function param-size($param-name, $size) {
  @return wrap-param($size, $size, SIZE, $param-name);
}

@function param-border-size($param-name, $size) {
  @return wrap-param($size, $size, BORDER_SIZE, $param-name);
}

@function param-border-top-size($param-name, $size) {
  @return wrap-param($size, $size, BORDER_TOP_SIZE, $param-name);
}

@function param-border-bottom-size($param-name, $size) {
  @return wrap-param($size, $size, BORDER_BOTTOM_SIZE, $param-name);
}

@function param-border-left-size($param-name, $size) {
  @return wrap-param($size, $size, BORDER_LEFT_SIZE, $param-name);
}

@function param-border-right-size($param-name, $size) {
  @return wrap-param($size, $size, BORDER_RIGHT_SIZE, $param-name);
}

@function param-padding-size($param-name, $size) {
  @return wrap-param($size, $size, PADDING_SIZE, $param-name);
}

@function param-padding-top-size($param-name, $size) {
  @return wrap-param($size, $size, PADDING_TOP_SIZE, $param-name);
}

@function param-padding-bottom-size($param-name, $size) {
  @return wrap-param($size, $size, PADDING_BOTTOM_SIZE, $param-name);
}

@function param-padding-left-size($param-name, $size) {
  @return wrap-param($size, $size, PADDING_LEFT_SIZE, $param-name);
}

@function param-padding-right-size($param-name, $size) {
  @return wrap-param($size, $size, PADDING_RIGHT_SIZE, $param-name);
}

@function param-margin-size($param-name, $size) {
  @return wrap-param($size, $size, MARGIN_SIZE, $param-name);
}

@function param-margin-top-size($param-name, $size) {
  @return wrap-param($size, $size, MARGIN_TOP_SIZE, $param-name);
}

@function param-margin-bottom-size($param-name, $size) {
  @return wrap-param($size, $size, MARGIN_BOTTOM_SIZE, $param-name);
}

@function param-margin-left-size($param-name, $size) {
  @return wrap-param($size, $size, MARGIN_LEFT_SIZE, $param-name);
}

@function param-margin-right-size($param-name, $size) {
  @return wrap-param($size, $size, MARGIN_RIGHT_SIZE, $param-name);
}

@function param-bg-size($param-name, $size) {
  @return wrap-param($size, $size, BG_SIZE, $param-name);
}

@function param-text-size($param-name, $size) {
  @return wrap-param($size, $size, TEXT_SIZE, $param-name);
}

@function param-width($param-name, $size) {
  @return wrap-param($size, $size, WIDTH_SIZE, $param-name);
}

@function param-height($param-name, $size) {
  @return wrap-param($size, $size, HEIGHT_SIZE, $param-name);
}

@function param-top($param-name, $size) {
  @return wrap-param($size, $size, TOP_SIZE, $param-name);
}

@function param-bottom($param-name, $size) {
  @return wrap-param($size, $size, BOTTOM_SIZE, $param-name);
}

@function param-left($param-name, $size) {
  @return wrap-param($size, $size, LEFT_SIZE, $param-name);
}

@function param-right($param-name, $size) {
  @return wrap-param($size, $size, RIGHT_SIZE, $param-name);
}

@function param-alpha($param-name, $alpha-default-value) {
  @return wrap-param($alpha-default-value,  $alpha-default-value, ALPHA, $param-name);
}

@function param-color($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, COLOR, $param-name);
}

@function param-color-alpha($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, COLOR_ALPHA, $param-name);
}

@function param-bg-color($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, BG_COLOR_ALPHA, $param-name);
}

@function param-border-color-alpha($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, BORDER_COLOR_ALPHA, $param-name);
}

@function param-text-color($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, TEXT_COLOR, $param-name);
}

@function param-text-color-preserve-legacy-alpha($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, TEXT_COLOR_LEGACY_ALPHA, $param-name);
}

@function param-box-shadow-color($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, BOX_SHADOW_COLOR_ALPHA, $param-name);
}

@function param-border-color($param-name, $color-index) {
  $actual-color: theme-color-map($color-index);
  @return wrap-param($actual-color, $color-index, BORDER_COLOR, $param-name);
}

@function param-text-alignment($param-name, $alignment) {
  @return wrap-param($alignment, $alignment, TEXT_ALIGNMENT, $param-name);
}

@mixin param-font-family($param-name, $font-family) {
  /*<param type="FONT_FAMILY" name="#{$param-name}" value="#{$font-family}">*/
  font-family: safe-unquote($font-family);
  /*</param>*/
}

@mixin param-font($param-name, $font-index) {
  /*<param type="FONT" name="#{$param-name}" value="#{$font-index}">*/
  font: theme-font-map($font-index);
  /*</param>*/
}

@mixin param-box-shadow($param-name, $box-shadow-value) {
  /*<param type="BOX_SHADOW" name="#{$param-name}" value="#{$box-shadow-value}">*/
  box-shadow: safe-unquote($box-shadow-value);
  /*</param>*/
}

@mixin param-border-radius($param-name, $radius) {
  /*<param type="BORDER_RADIUS" name="#{$param-name}" value="#{$radius}">*/
  border-radius: safe-unquote($radius);
  /*</param>*/
}

@mixin param-transition($param-name, $transition-value) {
  /*<param type="TRANSITION" name="#{$param-name}" value="#{$transition-value}">*/
  transition: safe-unquote($transition-value);
  /*</param>*/
}

@mixin param-inverted-viewzoom($param-name) {
  /*<param type="INVERTED_ZOOM" name="#{$param-name}" value="1">*/
  transform: scale(1);
  /*</param>*/
}

@mixin param-inverted-viewzoom-fixed($param-name) {
  /*<param type="INVERTED_ZOOM_FIXED" name="#{$param-name}" value="1">*/
  transform: scale(1);
  /*</param>*/
}

@mixin param-orientation-zoom-fix($param-name) {
  /*<param type="ORIENTATION_ZOOM_FIX" name="#{$param-name}" value="1">*/
  transform: scale(1);
  /*</param>*/
}

@mixin param-zoom-by-screen-properties($param-name) {
  /*<param type="ZOOM_BY_SCREEN_PROPERTIES" name="#{$param-name}" value="1">*/
  transform: scale(1);
  /*</param>*/
}

@function param-url($param-name, $param, $suffix) {
  $url-value: url(unquote(base-url() + '/' + theme-data-map($param) + '/' + $suffix));
  @return wrap-param($url-value, $param + '|' + $suffix, URL, $param-name);
}


//deprecated:
@function param-cssstring($param-name, $str) {
  $css-string-val: theme-data-map($str);
  @return wrap-param($css-string-val, $str, CSSString, $param-name);
}

@function param-number($param-name, $number) {
  $number-val: theme-data-map($number);
  @return wrap-param($number-val, $number, number, $param-name);
}

@mixin exports($key, $value) {
  /*<exports name="#{$key}" value="#{$value}" />*/
}

@mixin define-mapped-param($param-name, $mapped-param-name, $mapped-param-type: '') {
  /*<mappedParam name="#{$param-name}" mapped="#{$mapped-param-name}" mappedtype="#{$mapped-param-type}"/>*/
}

@mixin sum-params($param-name, $params-to-sum...) {
  /*<sumparams name="#{$param-name}" args="#{$params-to-sum}"/>*/
}

@mixin define-param($param-name, $param-type, $default-value) {
  @if index(SIZE COLOR COLOR_ALPHA BG_COLOR BOX_SHADOW BORDER_RADIUS FONT, $param-type) {
    /*<defineParam type="#{$param-type}" name="#{$param-name}" value="#{$default-value}"/>*/
  }
}

@mixin define-editable-param($param-name, $param-type, $default-value) {
  @if index(SIZE COLOR COLOR_ALPHA BG_COLOR BOX_SHADOW BORDER_RADIUS FONT, $param-type) {
    /*<defineEditableParam type="#{$param-type}" name="#{$param-name}" value="#{$default-value}"/>*/
  }
}
