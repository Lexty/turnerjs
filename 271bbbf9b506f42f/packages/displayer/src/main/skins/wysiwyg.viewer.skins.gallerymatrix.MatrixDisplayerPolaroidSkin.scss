@charset "UTF-8";

@import '../../../../components/src/main/mixins/components-base';
@import 'mixins/displayerMixins';
@include displayer-text-overflow;


// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$brw: 5px;
$rd: 0;
$shd: 0 1px 4px rgba(0, 0, 0, .6);
$bg: color_11;
$bgh: color_17;
$ttl: color_15;
$txt: color_15;
$fntt: font_6;
$fntds: font_8;
$trans: opacity .4s ease 0s;

@include exports("heightDiff", 80);
@include exports("m_heightDiff", 40);
@include exports("image:skin", "skins.core.ImageSkin");

@include define-mapped-param(imageWrapperTop, brw);
@include define-mapped-param(imageWrapperRight, brw);
@include define-mapped-param(imageWrapperLeft, brw);

:host {
  @include abs-distance(0);
  @include param-border-radius(rd, $rd);
  @include param-box-shadow(shd, $shd);
  background: param-bg-color(bg, $bg);
}

#imageWrapper {
  @include abs-distance(0);
  @include param-border-radius(rd, $rd);
}

.imgBorder {
  @include abs-distance(0);
  @include param-border-radius(rd, $rd);
  padding: param-padding-size(brw, $brw) param-padding-size(brw, $brw) 0 param-padding-size(brw, $brw);
}

#image {
  @include param-border-radius(rd, $rd);
}

#zoom {
  position: absolute;
  top: param-padding-size(brw, $brw);
  bottom: 0;
  left: param-padding-size(brw, $brw);
  right: param-padding-size(brw, $brw);
  background: param-bg-color(bgh, $bgh);
  @include param-border-radius(rd, $rd);
  @include opacity(0);
  @include param-transition(trans, $trans);
}

.panel {
  height: 60px;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 0 10px;
}

#title {
  @include param-font(fntt, $fntt);
  color: param-text-color(ttl, $ttl);
  white-space: nowrap;
  overflow: hidden;
  position: absolute;
  bottom: 44px;
  left: 10px;
  right: 10px;
  height: auto;
}

[data-state~="mobileView"] #title {
  bottom: 10px;
}

#description {
  color: param-text-color(txt, $txt);
  @include param-font(fntds, $fntds);
  overflow: hidden;
  position: absolute;
  bottom: 28px;
  left: 10px;
  right: 10px;
  height: 1.2em;
}

[data-state~="mobileView"] #description {
  display: none;
}

#link {
  color: param-text-color(txt, $txt);
  @include param-font(fntds, $fntds);
  position: absolute;
  left: 10px;
  right: 10px;
  bottom: 10px;
  left: 10px;
  right: 10px;
  text-decoration: underline !important;
  white-space: nowrap;
  overflow: hidden;
  height: 1.2em;
}

[data-state~="alignLeft"] #title {
  text-align: left;
}

[data-state~="alignCenter"] #title {
  text-align: center;
}

[data-state~="alignRight"] #title {
  text-align: right;
}

[data-state~="alignLeft"] #description {
  text-align: left;
}

[data-state~="alignCenter"] #description {
  text-align: center;
}

[data-state~="alignRight"] #description {
  text-align: right;
}

[data-state~="alignLeft"] #link {
  text-align: left;
}

[data-state~="alignCenter"] #link {
  text-align: center;
}

[data-state~="alignRight"] #link {
  text-align: right;
}

[data-state~="noLink"] #link {
  display: none;
}

[data-state~="rollover"] :hover #zoom {
  @include opacity(1);
  @include param-transition(trans, $trans);
}
