@charset "UTF-8";

@import '../../../../components/src/main/mixins/components-base';



// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$brd: color_15;
$rd: 2px;
$bg: color_11;
$fntds: font_8;
$txt: color_15;
$shd: 0 1px 3px rgba(0, 0, 0, .5);
$ishd: rgba(255, 255, 255, 0.59) 0px 0px 6px 0px inset, rgba(255, 255, 255, 0.92) 0px 1px 0px 0px inset, rgba(255, 255, 255, 0.2) 0px 0px 5px 0px inset;
$brw: 12px;
$trans: opacity .4s ease 0s;
$tdr: BASE_THEME_DIRECTORY;

@include define-mapped-param(imageWrapperBottom, brw);
@include define-mapped-param(imageWrapperTop, brw);
@include define-mapped-param(imageWrapperRight, brw);
@include define-mapped-param(imageWrapperLeft, brw);

@include define-mapped-param(contentPaddingLeft, brw);
@include define-mapped-param(contentPaddingRight, brw);
@include define-mapped-param(contentPaddingBottom, brw);
@include define-mapped-param(contentPaddingTop, brw);

@include exports("image:skin", "skins.core.ImageSkin");

#imageWrapper {
  @include param-box-shadow(shd, $shd);
  @include distance(0);
  @include param-box-shadow(shd, $shd);
  @include param-border-radius(rd, $rd);
  position: relative;
  @include param-border-radius(rd, $rd);
  background-image: param-url(tdr, $tdr, "ironpatern.png");
}

.imgBorder {
  @include abs-distance(0);
  @include param-border-radius(rd, $rd);
  background: param-bg-color(brd, $brd);
  border: param-border-size(brw, $brw) solid transparent;
  box-sizing: border-box;
}

#image {
  @include param-border-radius(rd, $rd);
  overflow: hidden;
}

#zoom {
  @include abs-distance(0);
  @include param-border-radius(rd, $rd);
  padding: 10px;
  background: param-bg-color(bg, $bg);
  @include opacity(0);
  @include param-transition(trans, $trans);
}

#title {
  display: none;
}

#description {
  display: none;
}

.screw {
  display: inline-block;
  background: param-url(tdr, $tdr, "skrew.png") no-repeat;
  width: 15px;
  height: 15px;
}

.screw-tl,
.screw-tr,
.screw-bl,
.screw-br {
  position: absolute;
}

.screw-tl {
  top: 5px;
  left: 5px;
}

.screw-tr {
  top: 5px;
  right: 5px;
}

.screw-bl {
  bottom: 5px;
  left: 5px;
}

.screw-br {
  bottom: 5px;
  right: 5px;
}

.img-glow {
  @include param-box-shadow(ishd, $ishd);
  @include param-border-radius(rd, $rd);
  @include abs-distances(0, 0, 2px, 0);
}

#link {
  @include param-font(fntds, $fntds);
  color: param-text-color(txt, $txt);
  position: absolute;
  bottom: 10px;
  left: 10px;
  cursor: pointer !important;
}

[data-state~="noLink"] #link {
  display: none;
}

#zoom:hover {
  @include opacity(1);
}

[data-state~="rollover"] #zoom {
  @include opacity(1);
}
