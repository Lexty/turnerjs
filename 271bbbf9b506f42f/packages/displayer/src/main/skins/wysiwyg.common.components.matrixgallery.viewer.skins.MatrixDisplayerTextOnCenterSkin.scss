@charset "UTF-8";

@import '../../../../components/src/main/mixins/components-base';
@import 'mixins/displayerMixins';
@include displayer-text-overflow;
// ***************************************************************************************************************************************
// NOTE: *DO NOT* change the param names on existing skins (e.g. brd, shd, bg, etc) - the first argument passed to the param() functions.
// these are saved in the site's data, changing them will break the site.
// you may give skin params any name you wish - but only in new components and their (new) skins.
// ***************************************************************************************************************************************
$border-color: color_15;
$hover-background-color: color_15;
$title-color: color_18;
$description-text-color: color_11;
$border-width: 0;
$border-radius: 0;
$box-shadow: 0 1px 4px rgba(0, 0, 0, .6);
$description-font: font_9;
$title-font: font_7;
$transition: opacity .4s ease 0s;
$web-theme-dir: WEB_THEME_DIRECTORY;
$link-color: color_11;
$link-hover-color: color_12;

@include define-mapped-param(imageWrapperBottom, brw);
@include define-mapped-param(imageWrapperTop, brw);
@include define-mapped-param(imageWrapperRight, brw);
@include define-mapped-param(imageWrapperLeft, brw);

@include exports("image:skin", "skins.core.ImageSkin");

#imageWrapper {
  @include abs-distance(0);
  @include param-box-shadow(shd, $box-shadow);
  @include param-border-radius(rd, $border-radius);
}

.imgBorder {
  @include abs-distance(0);
  @include param-border-radius(rd, $border-radius);
  border: solid param-border-size(brw, $border-width) param-border-color-alpha(borderColor, $border-color);
  background: param-border-color-alpha(borderColor, $border-color);
}

#image {
  @include param-border-radius(rd, $border-radius);
}

#zoom {
  @include abs-distance(0);
  background: param-bg-color(bgHover, $hover-background-color);
  @include param-border-radius(rd, $border-radius);
  padding: 0;
  @include opacity(0);
  @include param-transition(trans, $transition);
  overflow: hidden;
}

.zoomPadding {
  @include abs-distance(30px);
}

#title {
  @include param-font(fntt, $title-font);
  color: param-text-color(titleColor, $title-color);
  line-height: 1.3em;
  max-height: 3.9em;
}

#description {
  color: param-text-color(descColor, $description-text-color);
  @include param-font(fntds, $description-font);
  line-height: 1.3em;
  max-height: 3.9em;
}

#link {
  display: block;
  @include param-font(fntds, $description-font);
  position: relative;
  width: 30px;
}

.linkIcon {
  background-color: param-border-color(linkColor, $link-color);
  background-image: param-url(webThemeDir, $web-theme-dir, "gallery/link_icon.png");
  background-repeat: no-repeat !important;
  background-position: center center !important;
  width: 30px;
  height: 30px;

  &:hover {
    background-color: param-bg-color(linkHoverColor, $link-hover-color);
  }
}

#title:not(:empty) + #description:not(:empty) {
  margin-top: 5px;
}

[data-state~="link"] #title:not(:empty) ~ #link {
  margin-top: 13px;
}

[data-state~="link"] #description:not(:empty) + #link {
  margin-top: 13px;
}

[data-state~="alignLeft"] #link {
  margin: 0 auto 0 0;
}

[data-state~="alignCenter"] #link {
  margin: auto;
}

[data-state~="alignRight"] #link {
  margin: 0 0 0 auto;
}

[data-state~="alignLeft"] #zoom {
  text-align: left;
}

[data-state~="alignCenter"] #zoom {
  text-align: center;
}

[data-state~="alignRight"] #zoom {
  text-align: right;
}

:host:hover #zoom {
  @include opacity(1);
  @include param-transition(trans, $transition);
}

.table {
  display: table;
  height: 100%;
  table-layout: fixed;
  width: 100%;
}

.inner {
  vertical-align: middle;
  display: table-cell;
}
