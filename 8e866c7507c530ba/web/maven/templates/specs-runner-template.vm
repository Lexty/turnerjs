<!DOCTYPE html>
<!--wysiwyg-->
<html>
<head>
    <title>Wix mobile editor</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta http-equiv="Cache-Control" content="no-cache">
    <link rel="icon" type="image/png" href="../../main/images/mobile/editorMobile/favicon.ico">
    <link href="../framework/jasmine-min.css" rel="stylesheet">

    <!-- STYLES -->
    <link rel="stylesheet" href="../../main/css/wysiwyg/editorWeb.css">

    <script type="text/javascript">
        var editorModel = {
            'mode': 'unit_test'
        };
        var serviceTopology = {
            scriptsLocationMap: {
                core: '../../main'
            },
            biServerUrl: "http://frog.wixpress.com/",
            scriptsRoot: '../../main',
            staticSkinUrl : '../mock/javascript/skins',
            staticMediaUrl: "/",
            staticThemeUrl: "/",
            emailServer: "/",
            htmlComponentEchoUrl: "/",
            editorServerRoot:'http://editorSrv.url',
            mediaServerRoot:'http://mediaSrv.url',
            'resourcesRoot' : '../../main/resources/wysiwyg/bundles/',
            appStoreUrl: '../mock'
        };

         // Set view mode
        var viewMode = 'editor';

        // Mock configUrls global
        configUrls = serviceTopology;

        if(window.top.HB){
            editorModel.runningExperiments = window.top.HB.runningExperiments;
        }
    </script>

</head>
<body class="selectableChildren">
    <div id="testPlayGround" style="width:1px; height:1px; overflow:hidden; position:relative;"></div>

        $parser.setItemTemplate('   <script type="text/javascript" src="$relativePath"></script>')
        $parser.setSeparator("
        ")
    
        <!-- libs -->
        $parser.itemsIn("html-bootstrap", "libs.js")
        <!-- BI -->
        $parser.itemsIn("html-bootstrap", "bi.js")
        <!-- bootstrap -->
        $parser.itemsIn("html-bootstrap", "bootstrap.js")

        <script>
            W.Experiments.markExperimentsForDeployment(editorModel.runningExperiments);
            W.Experiments.markExperimentFromURL();
        </script>

        <!-- Experiments -->
        $parser.itemsIn("html-client-core","mobile-core-experiments.js")
        $parser.itemsIn("wysiwyg","viewer-experiments.js")
        $parser.itemsIn("wysiwyg","core-experiments.js")
        $parser.itemsIn("wysiwyg","editor-experiments.js")

        <!--html-client-core-core-managers-->
        $parser.itemsIn("html-client-core","mobile-core-managers.js")
        <!--html-client-core-editor-managers-->
        $parser.itemsIn("html-client-core","mobile-editor-managers.js")
        
        <!--core-->
        $parser.itemsIn("wysiwyg","core.js")
        <!--web-core-->
        $parser.itemsIn("wysiwyg","web-core.js")
        <!--web-editor-->
        $parser.itemsIn("wysiwyg","web-editor.js")
        <!--skins-experiments-->
        $parser.itemsIn("wysiwyg","skins-experiments.js")

    <script>
        // ovveride HtmlScriptLoader since we load the scripts synchronously
        W.Classes.newClass({
            name: "wysiwyg.editor.managers.TestHtmlScriptsLoader",
            Class: {
                Extends:"mobile.core.managers.HtmlScriptsLoader",
                _scriptFiles: []
            }
        });
        W.Managers.override([{Class: "wysiwyg.editor.managers.TestHtmlScriptsLoader", target:'HtmlScriptsLoader'}]);
        W.Managers.deploySync();
    </script>

    <script type="text/javascript" src="../mock/ResourceManagerMock.js"></script>

        <!--html-client-core-core-data-types-->
        $parser.itemsIn("html-client-core","mobile-core-data-types.js")
        <!--html-client-core-editor-data-types-->
        $parser.itemsIn("html-client-core","mobile-editor-data-types.js")
        <!--core-data-types-->
        $parser.itemsIn("wysiwyg","core-data-types.js")
        <!--web-editor-data-->
        $parser.itemsIn("wysiwyg","web-editor-data.js")
            
        <!--html-client-core-core-components-->
        $parser.itemsIn("html-client-core", "mobile-core-components.js")
        <!--html-client-core-editor-components-->
        $parser.itemsIn("html-client-core","mobile-editor-components.js")

        <!--web-viewer-components-->
        $parser.itemsIn("wysiwyg","web-viewer-components.js")
        <!--web-editor-components-->
        $parser.itemsIn("wysiwyg","web-editor-components.js")


        <!--test-resources-->
    <script src="test-resources.js" type="text/javascript"></script>


    <!-- Testing Facilities -->
    <link href="../framework/jasmine-min.css" rel="stylesheet">
    <script src="../framework/framework.js"></script>

    <script src="/files/js/testicle.js" type="text/javascript"></script>
     <script src="wysiwyg-specs.js"></script>

    <!-- Create World -->
    <script>

        JsHamcrest.Integration.jasmine();

        // Same as above
        JsHamcrest.Integration.jasmine({
            scope: this
        });

        function clearPlayGround() {
            $('testPlayGround').empty();
        }
        function getPlayGround() {
            return $('testPlayGround');
        }

        function onComplete(data) {
            //console.log("got back with success");
            //console.log(data);
            // TODO: send status to the server instead of logging
        }

        function onError(message, error, data) {
            //console.log("got back with an error: " + message);
            //console.log(data);
            // TODO: send status to the server instead of logging
        }

        function createDoc() {
            //var json = {"name":"sitename" + new Date().getTime(),"id":null,"dataNodes":{},"userId":null,"documents":[{"type":".Document","children":[],"documentType":null,"dataReference":null}],"username":null};
            W.ServerFacade.createDocument("sitename" + new Date().getTime(),
                    {"type":".Document","children":[
                        {
                            "type":".Page","id":"page1","children":[
                            {"type":".Component","id":"comp1","dataType":"Title","dataReference":"#title1"},
                            {"type":".Component","id":"comp2","dataType":"Gallery","dataReference":"#gallery1"},
                            {"type":".Component","id":"comp3","dataType":"Paragraph","dataReference":"#para1"}
                        ],
                            "components":[
                                {"type":".Component","id":"comp1","dataType":"Title","dataReference":"#title1"},
                                {"type":".Component","id":"comp2","dataType":"Gallery","dataReference":"#gallery1"},
                                {"type":".Component","id":"comp3","dataType":"Paragraph","dataReference":"#para1"}
                            ],
                            "dataReference":null
                        }
                    ],
                        "documentType":null,"dataReference":null},
                    {
                        "title1":{"type":".Title","title":"SomeTitle","id":"title1","metaData":null},
                        "para1":{"type":".Paragraph","text":"Some text","id":"para1","metaData":null},
                        "gallery1":{"type":".Paragraph","text":"Some text","id":"para1","metaData":null}
                    }
                    , onComplete, onError);
        }

    </script>

    <script type="text/javascript">
        // Load any missing classes
        W.Classes.setDynamicScriptLoading(true);
        // Register configuration
        W.Viewer.setViewerConfig(serviceTopology);
        W.Config.createPackage('EDITOR_URLS', ['editorServerRoot','mediaServerRoot'], serviceTopology);
        // Set theme initiate data
        W.Theme.setInitDataItems([]);
        //
        $(document).addEvent('domready', function() {

        });
    </script>

</body>
</html>