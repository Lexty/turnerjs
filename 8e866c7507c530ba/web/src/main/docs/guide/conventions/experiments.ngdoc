@doc overview
@id experiments
@name Experiments
@description

## Usage of experiments in the code

Inside the **'angularEditor'** Module, we load all the _defined_ and _running_ experiments.

#### "_How do I make use of Experiments in my code?_"
Each experiment has a corresponding Angular **constant** which means they can be injected to any of your
Angular controllers, directives or services, like any other Angular "animal".




#### Example 1 - Changing the logic inside a controller (or service).
```javascript
angular.module('myModule').
    controller("MyController", function($scope, EXP_ExperimentName) {
    ...
    if(EXP_ExperimentName) {
        // Code relating to your experiment is inserted here.
    }
    ...
});
```

#### Example 2 - Replacing the HTML template of a directive.
```javascript
var app = angular.module('wixElements');
    app.directive('wixButton', function (editorResources, editorCommands, EXP_experiment1) {
        var partialPath = '/wixelements/wixbutton/WixButtonTemplate.html' ;
        if(EXP_experiment1) { 
            partialPath = '/wixelements/wixbutton/WixButtonTemplate.experiment1.html';
        }
        return {
            restrict: 'E',
            templateUrl: editorResources.getAngularPartialPath(partialPath),
            scope: {
            ...
            }
            ...
        }
    });
```

### How do we load experiments to our Angular application

Each Experiment, is converted in the bootstrap process to a constant with a prefix **"EXP\_"** and assigned a boolean value.<br>
The boolean value of the angular constant _"EXP\_MyEditorFeature"_ depends whether the experiment
is opened or not.<br>
_true_ if it is opened. _false_ if it is closed.<br><br>

If for example there is an experiment that is called "MyEditorFeature" which is opened - a corresponding
constant will be created for it, called **"EXP\_MyEditorFeature"** assigned with a **true** boolean value..<br>
